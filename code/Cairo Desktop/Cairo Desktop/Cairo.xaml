<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/netfx/2009/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cairo="clr-namespace:CairoDesktop">
    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" x:Key="CairoMenuItemHoverGradient">
        <GradientStop Color="#8F1A4DFF" Offset="0.0" />
        <GradientStop Color="#DF338FFF" Offset="1.0" />
    </LinearGradientBrush>
    <BitmapImage x:Key="CairoMenuIcon" UriSource="Resources\cairoMenuDefault.png"></BitmapImage>
    <BitmapImage x:Key="CairoSearchIcon" UriSource="Resources\searchDefault.png"></BitmapImage>
    <Style TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="3 2">
                        <Border Name="border"
                            Width="{TemplateBinding ActualWidth}"
                            Height="{TemplateBinding ActualHeight}"
                            CornerRadius="2"
                            BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- New menu styles below, will be renamed later -->
    <Style x:Key="CairoMenuBarMainContainerStyle"
        TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle"
            Value="True" />
        <Setter Property="SnapsToDevicePixels"
            Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="Transparent"
                        BorderThickness="0"
                        Margin="-2"
                        Padding="0">
                        <StackPanel ClipToBounds="True"
                            Orientation="Horizontal"
                            IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CairoMenuItemStyle"
        TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground"
            Value="#FFFFFFFF" />
        <Setter Property="FontFamily"
                                Value="./Resources/#Segoe UI Semibold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                        Background="Transparent"
                        BorderBrush="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0"
                                    MinWidth="17"
                                    Width="Auto"
                                    SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="Auto"
                                    SharedSizeGroup="MenuTextColumnGroup" />
                                <ColumnDefinition Width="Auto"
                                    SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition x:Name="Col3"
                                    Width="14" />
                            </Grid.ColumnDefinitions>
                            <!-- ContentPresenter to show an Icon if needed -->
                            <ContentPresenter Grid.Column="0"
                                Margin="8,0,6,0"
                                x:Name="Icon"
                                VerticalAlignment="Center"
                                ContentSource="Icon" />
                            <!-- Glyph is a checkmark if needed for a checkable menu -->
                            <Grid Grid.Column="0"
                                Visibility="Hidden"
                                Margin="4,0,6,0"
                                x:Name="GlyphPanel"
                                VerticalAlignment="Center">
                                <Path x:Name="GlyphPanelpath"
                                    VerticalAlignment="Center"
                                    Fill="{TemplateBinding Foreground}"
                                    Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                                    FlowDirection="LeftToRight" />
                            </Grid>
                            <!-- Content for the menu text etc -->
                            <ContentPresenter Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                x:Name="HeaderHost"
                                RecognizesAccessKey="True"
                                ContentSource="Header" />
                            <!-- Content for the menu IGT -->
                            <ContentPresenter Grid.Column="2"
                                Margin="8,1,8,1"
                                x:Name="IGTHost"
                                ContentSource="InputGestureText"
                                VerticalAlignment="Center" />
                            <!-- Arrow drawn path which points to the next level of the menu -->
                            <Grid Grid.Column="3"
                                Margin="4,0,6,0"
                                x:Name="ArrowPanel"
                                VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Fill="{TemplateBinding Foreground}"
                                    Data="M0,0 L0,8 L4,4 z" />
                            </Grid>
                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Right"
                                x:Name="SubMenuPopup"
                                Focusable="false"
                                PopupAnimation="Fade"
                                AllowsTransparency="True">
                                <Border x:Name="SubMenuBorder">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="BorderBrush"
                                                Value="#AF12367F" />
                                            <Setter Property="BorderThickness"
                                                Value="0,1,0,0" />
                                        </Style>
                                    </Border.Style>
                                    <Border>
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0.5,0"
                                                            EndPoint="0.5,1">
                                                            <GradientStop Color="#bf1a1a1a"
                                                                Offset="0" />
                                                            <GradientStop Color="#cF000000"
                                                                Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush"
                                                    Value="#FF5b5b5b" />
                                                <Setter Property="BorderThickness"
                                                    Value="1,0,1,1" />
                                                <Setter Property="CornerRadius"
                                                    Value="0,0,5,5" />
                                                <Setter Property="Padding"
                                                    Value="0,5,0,5" />
                                            </Style>
                                        </Border.Style>
                                        <Grid x:Name="SubMenu"
                                            Grid.IsSharedSizeScope="True">
                                            <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                            <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Grid>
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>
                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role"
                            Value="TopLevelHeader">
                            <Setter Property="Padding"
                                Value="13,1,13,0" />
                            <Setter Property="Margin"
                                Value="0,-2,0,0" />
                            <Setter Property="Placement"
                                Value="Bottom"
                                TargetName="SubMenuPopup" />
                            <Setter Property="MinWidth"
                                Value="0"
                                TargetName="Col0" />
                            <Setter Property="Width"
                                Value="Auto"
                                TargetName="Col3" />
                            <Setter Property="Height"
                                Value="22" />
                            
                            <Setter Property="FontSize"
                                Value="14" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="Icon" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="GlyphPanel" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="IGTHost" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="ArrowPanel" />
                            <Setter Property="BitmapEffect">
                                <Setter.Value>
                                    <DropShadowBitmapEffect Color="Black"
                                        Softness="0"
                                        ShadowDepth="1"
                                        Direction="90"
                                        Opacity=".5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="TopLevelHeader" />
                                <Condition Property="IsMouseOver"
                                    Value="True" />
                                <Condition Property="IsPressed"
                                    Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BitmapEffect">
                                <Setter.Value>
                                    <OuterGlowBitmapEffect GlowColor="Black"
                                        GlowSize="7"
                                        Opacity=".5" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="TopLevelHeader" />
                                <Condition Property="IsSubmenuOpen"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                TargetName="Border">
                                <Setter.Value>
                                    <!-- Pressed Menubar State -->
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                        <GradientStop Color="#8F1A4DB5" Offset="1.0" />
                                        <GradientStop Color="#DF338FFF" Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground"
                                Value="#FFFFFFFF" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="TopLevelItem" />
                                <Condition Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                TargetName="Border" Value="{StaticResource CairoMenuItemHoverGradient}"/>
                        </MultiTrigger>
                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role"
                            Value="TopLevelItem">
                            <Setter Property="Padding"
                                Value="0,3,0,0" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="ArrowPanel" />
                            <Setter Property="MinHeight"
                                Value="24" />
                            <Setter Property="Foreground"
                                Value="#FFFFFFFF" />
                            <Setter Property="FontSize"
                                Value="12" />
                            <Setter Property="FontFamily"
                                Value="Segoe UI" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="SubMenuHeader" />
                                <Condition Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                TargetName="Border" Value="{StaticResource CairoMenuItemHoverGradient}"/>
                        </MultiTrigger>
                        <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                        <Trigger Property="Role"
                            Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock"
                                Value="Top" />
                            <Setter Property="Padding"
                                Value="0,3,0,0" />
                            <Setter Property="MinHeight"
                                Value="24" />
                            <Setter Property="Foreground"
                                Value="#FFFFFFFF" />
                            <Setter Property="FontSize"
                                Value="12" />
                            <Setter Property="FontFamily"
                                Value="Segoe UI" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="SubMenuItem" />
                                <Condition Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                TargetName="Border" Value="{StaticResource CairoMenuItemHoverGradient}"/>
                        </MultiTrigger>
                        <!-- Role = SubMenuItem : this is a child menu item which has children-->
                        <Trigger Property="Role"
                            Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock"
                                Value="Top" />
                            <Setter Property="Padding"
                                Value="0,3,0,0" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="ArrowPanel" />
                            <Setter Property="MinHeight"
                                Value="24" />
                            <Setter Property="Foreground"
                                Value="#FFFFFFFF" />
                            <Setter Property="FontSize"
                                Value="12" />
                            <Setter Property="FontFamily"
                                Value="Segoe UI" />
                        </Trigger>
                        <!-- If no Icon is present the we collapse the Icon Content -->
                        <Trigger Property="Icon"
                            Value="{x:Null}">
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="Icon" />
                        </Trigger>
                        <!-- The GlyphPanel contains the CheckMark -->
                        <Trigger Property="IsChecked"
                            Value="true">
                            <Setter Property="Visibility"
                                Value="Visible"
                                TargetName="GlyphPanel" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="Icon" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CairoMenuItemThinStyle"
        TargetType="{x:Type MenuItem}" BasedOn="{StaticResource CairoMenuItemStyle}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Style.Triggers>
            <Trigger Property="Role"
                            Value="TopLevelHeader">
                <Setter Property="BitmapEffect">
                    <Setter.Value>
                        <OuterGlowBitmapEffect GlowColor="Black"
                                        GlowSize="2"
                                        Opacity="1" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver"
                            Value="True">
                <Setter Property="BitmapEffect">
                    <Setter.Value>
                        <OuterGlowBitmapEffect GlowColor="Black"
                                        GlowSize="7"
                                        Opacity=".5" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CairoMenuItemCairoMenuStyle"
        TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground"
            Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="ContainerBorder"
                        Background="Transparent"
                        BorderBrush="Transparent" Padding="13,0,0,0">
                        <Border x:Name="Border">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"
                                    SharedSizeGroup="MenuTextColumnGroup" />
                            </Grid.ColumnDefinitions>
                            <!-- Content for the menu text etc -->
                            <ContentPresenter Grid.Column="0"
                                Margin="{TemplateBinding Padding}"
                                x:Name="HeaderHost"
                                RecognizesAccessKey="True"
                                ContentSource="Header" />
                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Right"
                                x:Name="SubMenuPopup"
                                Focusable="false"
                                PopupAnimation="Fade"
                                AllowsTransparency="True">
                                <Border x:Name="SubMenuBorder">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="BorderBrush"
                                                Value="#AF12367F" />
                                            <Setter Property="BorderThickness"
                                                Value="0,1,0,0" />
                                        </Style>
                                    </Border.Style>
                                    <Border>
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0.5,0"
                                                            EndPoint="0.5,1">
                                                            <GradientStop Color="#bf1a1a1a"
                                                                Offset="0" />
                                                            <GradientStop Color="#cF000000"
                                                                Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush"
                                                    Value="#FF5b5b5b" />
                                                <Setter Property="BorderThickness"
                                                    Value="1,0,1,1" />
                                                <Setter Property="CornerRadius"
                                                    Value="0,0,5,5" />
                                                <Setter Property="Padding"
                                                    Value="0,5,0,5" />
                                            </Style>
                                        </Border.Style>
                                        <Grid x:Name="SubMenu"
                                            Grid.IsSharedSizeScope="True">
                                            <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                            <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Grid>
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                        </Border>
                    </Border>
                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>
                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role"
                            Value="TopLevelHeader">
                            <Setter Property="Padding"
                                Value="0,0,0,0" />
                            <Setter Property="Margin"
                                Value="0,-2,0,0" />
                            <Setter Property="Placement"
                                Value="Bottom"
                                TargetName="SubMenuPopup" />
                            <Setter Property="Height"
                                Value="22" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="TopLevelHeader" />
                                <Condition Property="IsMouseOver"
                                    Value="True" />
                                <Condition Property="IsPressed"
                                    Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BitmapEffect">
                                <Setter.Value>
                                    <OuterGlowBitmapEffect GlowColor="Black"
                                        GlowSize="7"
                                        Opacity=".5" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="TopLevelHeader" />
                                <Condition Property="IsSubmenuOpen"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                TargetName="Border">
                                <Setter.Value>
                                    <!-- Pressed Menubar State -->
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                        <GradientStop Color="#8F1A4DB5" Offset="1.0" />
                                        <GradientStop Color="#DF338FFF" Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CairoMenuItemCairoSearchMenuStyle"
        TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground"
            Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="ContainerBorder" Background="Transparent" BorderBrush="Transparent" Padding="0,0,13,0">
                        <Border x:Name="Border">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup" />
                                </Grid.ColumnDefinitions>
                                <!-- Content for the menu text etc -->
                                <ContentPresenter Grid.Column="0" Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" />
                                <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Right"
                                x:Name="SubMenuPopup"
                                Focusable="false"
                                PopupAnimation="Fade"
                                AllowsTransparency="True">
                                        <Grid x:Name="SubMenu"
                                            Grid.IsSharedSizeScope="True">
                                            <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                            <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </Border>
                        <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                        <ControlTemplate.Triggers>
                            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                            <Trigger Property="Role"
                            Value="TopLevelHeader">
                                <Setter Property="Padding"
                                Value="0,0,0,0" />
                                <Setter Property="Margin"
                                Value="0,-2,0,0" />
                                <Setter Property="Placement"
                                Value="Bottom"
                                TargetName="SubMenuPopup" />
                                <Setter Property="Height"
                                Value="22" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Role"
                                    Value="TopLevelHeader" />
                                    <Condition Property="IsMouseOver"
                                    Value="True" />
                                    <Condition Property="IsPressed"
                                    Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="BitmapEffect">
                                    <Setter.Value>
                                        <OuterGlowBitmapEffect GlowColor="Black"
                                        GlowSize="7"
                                        Opacity=".5" />
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Role"
                                    Value="TopLevelHeader" />
                                    <Condition Property="IsSubmenuOpen"
                                    Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                TargetName="Border">
                                    <Setter.Value>
                                    <!-- Pressed Menubar State -->
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                        <GradientStop Color="#8F1A4DB5" Offset="1.0" />
                                        <GradientStop Color="#DF338FFF" Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    <!-- Search Results -->
    <Style x:Key="CairoSearchResultsItemStyle"
        TargetType="ListViewItem">
        <Setter Property="Height" Value="60"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ToolTip" Value="{Binding Path=Path}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                                     BorderBrush="Transparent"
                                     BorderThickness="0"
                                     Background="{TemplateBinding Background}">
                        <MenuItem Command="cairo:CustomCommands.OpenSearchResult" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
            CommandParameter="{Binding}" Header="{Binding}">
                            <MenuItem.HeaderTemplate>
                                <ItemContainerTemplate>
                                    <StackPanel Orientation="Horizontal" Margin="-20,0,0,0">
                                        <Image Source="{Binding Path=Icon}"
                                        Height="32"
                                        Width="32" Margin="0,0,10,0" />
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock 
                                            FontSize="14"
                                            FontFamily="Segoe UI" Text="{Binding Path=Name}" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" Width="270" />
                                            <TextBlock 
                                                Foreground="Gray"
                                            FontSize="12"
                                            FontFamily="Segoe UI" Text="{Binding Path=Path}" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" Width="270" />
                                        </StackPanel>
                                    </StackPanel>
                                </ItemContainerTemplate>

                            </MenuItem.HeaderTemplate>
                        </MenuItem>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"
                Value="0">
                <Setter Property="Background"
                    Value="#FFEEEEEE"></Setter>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex"
                Value="1">
                <Setter Property="Background"
                    Value="#FFFFFFFF"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- CairoConfirmationBoxStyle -->
    <Style x:Key="CairoConfirmationBoxStyle"
        TargetType="{x:Type StackPanel}">
        <Setter Property="Width"
            Value="588" />
        <Setter Property="Height"
            Value="239" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Resources\cairoDiag.png" />
            </Setter.Value>
        </Setter>
    </Style>
    <!-- CairoConfirmationBoxImageStyle -->
    <Style x:Key="CairoConfirmationBoxImageStyle"
        TargetType="{x:Type Image}">
        <Setter Property="Width"
            Value="73" />
        <Setter Property="Height"
            Value="73" />
        <Setter Property="Margin"
            Value="40,40,20,0" />
    </Style>
    <!-- Style for menus that have something other than menuitems -->
    <Style x:Key="CairoMenuItemContainerStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <ContentPresenter x:Name="Header"
                                            ContentSource="Header"
                                            RecognizesAccessKey="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- CairoContextMenuStyle -->
    <Style x:Key="CairoContextMenuStyle"
        TargetType="{x:Type ContextMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0"
                                                            EndPoint="0.5,1">
                                                    <GradientStop Color="#bf1a1a1a"
                                                                Offset="0" />
                                                    <GradientStop Color="#cF000000"
                                                                Offset="1" />
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="BorderBrush"
                                                    Value="#FF5b5b5b" />
                                        <Setter Property="BorderThickness"
                                                    Value="1" />
                                        <Setter Property="CornerRadius"
                                                    Value="5" />
                                        <Setter Property="Padding"
                                                    Value="0,5,0,5" />
                                    </Style>
                                </Border.Style>
                                <Grid x:Name="SubMenu"
                                            Grid.IsSharedSizeScope="True">
                                    <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Grid>
                            </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Separator -->
    <Style x:Key="CairoMenuSeparatorStyle"
        TargetType="{x:Type Separator}">
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="Background"
            Value="#9923272B" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <StackPanel>
                        <Border Width="auto"
                            Height="1"
                            Margin="4,3,4,3"
                            Background="#40FFFFFF" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Button Style for Quick Launch -->
    <Style x:Key="CairoQuickLaunchButtonStyle"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="Width"
            Value="26" />
        <Setter Property="Height"
            Value="26" />
        <Setter Property="VerticalAlignment"
            Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                        BorderThickness="1"
                        Margin="0"
                        Background="Transparent"
                        BorderBrush="Transparent">
                        <ContentPresenter Margin="2,2,2,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                EndPoint="0,1">
                                        <GradientStop Color="#00FFFFFF"
                                    Offset="1.0" />
                                        <GradientStop Color="#1fFFFFFF"
                                    Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border"
                                Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                        <GradientStop Color="#4FFFFFFF"
                                    Offset="1" />
                                        <GradientStop Color="#0FFFFFFF"
                                    Offset="0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                        <GradientStop Color="#BA0054C9"
                                    Offset="1.0" />
                                        <GradientStop Color="#4F005CE4"
                                    Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border"
                                Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                        <GradientStop Color="#DF00aeff"
                                    Offset="1" />
                                        <GradientStop Color="#8F005A78"
                                    Offset="0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Button Style for Taskbar -->
    <Style x:Key="CairoTaskbarButtonInactiveStyle"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="FontFamily"
            Value="Segoe UI" />
        <Setter Property="FontSize"
            Value="12" />
        <Setter Property="Foreground"
            Value="White" />
        <Setter Property="Width"
            Value="140" />
        <Setter Property="Height"
            Value="28" />
        <Setter Property="VerticalAlignment"
            Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                
                <!-- this is the style that loads on default buttons -->
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                        BorderThickness="1"
                        CornerRadius="1"
                        Margin="0,0,0,0">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                EndPoint="0,1">
                                <!-- <GradientStop Color="#3AFFFFFF"
                                    Offset="1.0" />
                                <GradientStop Color="#00FFFFFF"
                                    Offset="0.65" />
                                <GradientStop Color="#00FFFFFF"
                                    Offset="0.0" />  -->
                                <GradientStop Color="#00FFFFFF"
                                    Offset="1.0" />
                                <GradientStop Color="#1fFFFFFF"
                                    Offset="0.0" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                <GradientStop Color="#4FFFFFFF"
                                    Offset="1" />
                                <GradientStop Color="#0FFFFFFF"
                                    Offset="0" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <ContentPresenter Margin="5,0,5,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                            Value="false">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                EndPoint="0,1">
                                        <GradientStop Color="#00FFFFFF"
                                    Offset="1.0" />
                                        <GradientStop Color="#00FFFFFF"
                                    Offset="0.4" />
                                        <GradientStop Color="#3fFFFFFF"
                                    Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                        <!-- <GradientStop Color="#EF005CE4"
                                    Offset="1.0" />
                                        <GradientStop Color="#7F0054C9"
                                    Offset="0.4" />
                                        <GradientStop Color="#3F1B4266"
                                    Offset="0.0" /> 
                                        <GradientStop Color="#DF005CE4" Offset="1.0" />
                                        <GradientStop Color="#6F0054C9" Offset="0.3" />
                                        <GradientStop Color="#4FFFFFFF" Offset="0.0" /> -->
                                        
                                        <GradientStop Color="#DF005FC0"
                                    Offset="1.0" />
                                        <GradientStop Color="#8F005A78"
                                    Offset="0.0" />

                                       
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border"
                                Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                        <GradientStop Color="#DF00aeff"
                                    Offset="1" />
                                        <GradientStop Color="#8F005A78"
                                    Offset="0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                       <GradientStop Color="#BA0054C9"
                                    Offset="1.0" />
                                        <GradientStop Color="#4F005CE4"
                                    Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CairoTaskbarButtonActiveStyle"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="FontFamily"
            Value="Segoe UI" />
        <Setter Property="FontSize"
            Value="12" />
        <Setter Property="Foreground"
            Value="White" />
        <Setter Property="Width"
            Value="140" />
        <Setter Property="Height"
            Value="28" />
        <Setter Property="VerticalAlignment"
            Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                        BorderThickness="1"
                        CornerRadius="1"
                        Margin="0,0,0,0">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                <!-- <GradientStop Color="#AFFFFFFF"
                                    Offset="1.0" />
                                <GradientStop Color="#5FFFFFFF"
                                    Offset="0.5" />
                                <GradientStop Color="#6F808080"
                                    Offset="0.0" /> -->
                                <GradientStop Color="#6AFFFFFF"
                                    Offset="1.0" />
                                <GradientStop Color="#5f808080"
                                    Offset="0.0" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                <GradientStop Color="#BFFFFFFF"
                                    Offset="1" />
                                <GradientStop Color="#5F808080"
                                    Offset="0" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <ContentPresenter Margin="5,0,5,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                            Value="false">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                        EndPoint="0,1">
                                        <GradientStop Color="#6AFFFFFF"
                                    Offset="1.0" />
                                        <GradientStop Color="#5f808080"
                                    Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1"
                                        EndPoint="0,0">
                                        <GradientStop Color="#8AFFFFFF"
                                    Offset="1.0" />
                                        <GradientStop Color="#8f808080"
                                    Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1"
                                        EndPoint="0,0">
                                        <GradientStop Color="#6AFFFFFF"
                                    Offset="1.0" />
                                        <GradientStop Color="#4f808080"
                                    Offset="0.0" />
                                        <!-- I enjoyed this style too much to
                                        delete it completely.
                                        <GradientStop Color="#6AFFFFFF"
                                    Offset="0.7" />
                                        <GradientStop Color="#5f808080"
                                    Offset="0.0" /> -->
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CairoTaskbarButtonFlashingStyle"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="FontFamily"
            Value="Segoe UI" />
        <Setter Property="FontSize"
            Value="12" />
        <Setter Property="Foreground"
            Value="White" />
        <Setter Property="Width"
            Value="140" />
        <Setter Property="Height"
            Value="28" />
        <Setter Property="VerticalAlignment"
            Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                	<ControlTemplate.Resources>
                		<Storyboard x:Key="FlashPulseCycle" AutoReverse="True" RepeatBehavior="Forever">
                			<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" AccelerationRatio="0.2" DecelerationRatio="0.2">
                				<SplineColorKeyFrame KeyTime="00:00:00" Value="#5FFF5400"/>
                				<SplineColorKeyFrame KeyTime="00:00:00.8000000" Value="#8F000000"/>
                			</ColorAnimationUsingKeyFrames>
                			<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" AccelerationRatio="0.2" DecelerationRatio="0.2">
                				<SplineColorKeyFrame KeyTime="00:00:00" Value="#AFF6BA31"/>
                				<SplineColorKeyFrame KeyTime="00:00:00.8000000" Value="#DF000000"/>
                			</ColorAnimationUsingKeyFrames>
                			<!-- <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" AccelerationRatio="0.2" DecelerationRatio="0.2">
                				<SplineColorKeyFrame KeyTime="00:00:00" Value="#4FFFFFFF"/>
                				<SplineColorKeyFrame KeyTime="00:00:00.8000000" Value="#AF1A1A1A"/>
                			</ColorAnimationUsingKeyFrames> -->
                		</Storyboard>
                	</ControlTemplate.Resources>
                    <Border x:Name="Border"
                        BorderThickness="1"
                        CornerRadius="1"
                        Margin="0,0,0,0">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,1"
                                        EndPoint="0,0">
                                <GradientStop Color="#CFDBA715"
                                    Offset="1.0" />
                                <GradientStop Color="#8FDB570B"
                                    Offset="0.0" />
                                <!-- <GradientStop Color="#CFF6BA31"
                                    Offset="1.0" />
                                <GradientStop Color="#7fff5400"
                                    Offset="0.4" />
                                <GradientStop Color="#3fff5400"
                                    Offset="0.0" /> 

                                <GradientStop Color="#AFF6BA31" Offset="1.0" />
                                <GradientStop Color="#5fff5400" Offset="0.3" />
                                <GradientStop Color="#4FFFFFFF" Offset="0.0" /> -->
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                <GradientStop Color="#FFFFDC2D"
                                    Offset="1.0" />
                                <GradientStop Color="#8FDB570B"
                                    Offset="0.0" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <ContentPresenter Margin="5,0,5,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FlashPulseCycle}" Name="SB1" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="SB1" />
                            </Trigger.ExitActions>
                        </Trigger> 
                		<EventTrigger RoutedEvent="FrameworkElement.Loaded">
                			<BeginStoryboard Storyboard="{StaticResource FlashPulseCycle}"/>
                		</EventTrigger>
                		<Trigger Property="IsEnabled"
                			Value="false">
                			<Setter TargetName="Border"
                				Property="Background">
                				<Setter.Value>
                					<LinearGradientBrush StartPoint="0,1"
                						EndPoint="0,0">
                                        <GradientStop Color="#CFDBA715"
                                    Offset="1.0" />
                                        <GradientStop Color="#8FDB570B"
                                    Offset="0.0" />
                                    </LinearGradientBrush>
                				</Setter.Value>
                			</Setter>
                		</Trigger>
                		<Trigger Property="IsMouseOver"
                			Value="true">
                			<Setter TargetName="Border"
                				Property="Background">
                				<Setter.Value>
                					<LinearGradientBrush StartPoint="0,1"
                						EndPoint="0,0">
                                        <GradientStop Color="#EFDBA715"
                                    Offset="1.0" />
                                        <GradientStop Color="#AFDB570B"
                                    Offset="0.0" />
                                        <!-- <GradientStop Color="#DFF6BA31" Offset="1.0" />
                						<GradientStop Color="#7fff5400" Offset="0.3" />
                						<GradientStop Color="#5FFFFFFF" Offset="0.0" /> -->
                					</LinearGradientBrush>
                				</Setter.Value>
                			</Setter>
                		</Trigger>
                		<Trigger Property="IsPressed"
                			Value="true">
                			<Setter TargetName="Border"
                				Property="Background">
                				<Setter.Value>
                					<LinearGradientBrush StartPoint="0,1"
                						EndPoint="0,0">
                                        <GradientStop Color="#AFDBA715"
                                    Offset="1.0" />
                                        <GradientStop Color="#6FDB570B"
                                    Offset="0.0" />
                					</LinearGradientBrush>
                				</Setter.Value>
                			</Setter>
                		</Trigger>
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Style for task list buttons -->
    <Style x:Key="CairoTaskListPopupStyle" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#bf1a1a1a" Offset="0" />
                    <GradientStop Color="#cF000000" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF5b5b5b"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="CornerRadius" Value="5,5,5,5"/>
        <Setter Property="Padding" Value="0,5,0,5"/>
    </Style>
    <Style x:Key="CairoTaskListButtonStyle"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="FontFamily"
            Value="Segoe UI" />
        <Setter Property="FontSize"
            Value="12" />
        <Setter Property="Foreground"
            Value="White" />
        <Setter Property="Width"
            Value="206" />
        <Setter Property="Height"
            Value="28" />
        <Setter Property="VerticalAlignment"
            Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                        BorderThickness="0"
                            Background="Transparent"
                        Margin="0,0,0,0">
                        <ContentPresenter Margin="5,0,5,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                            Value="true">
                            <Setter Property="Background"
                                TargetName="Border" Value="{StaticResource CairoMenuItemHoverGradient}"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                            Value="true">
                            <Setter Property="Background"
                                TargetName="Border" Value="{StaticResource CairoMenuItemHoverGradient}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Style for list button on taskbar -->
    <Style x:Key="CairoTaskbarButtonList"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="FontFamily"
            Value="Segoe UI" />
        <Setter Property="FontSize"
            Value="12" />
        <Setter Property="Foreground"
            Value="White" />
        <Setter Property="Width"
            Value="24" />
        <Setter Property="Height"
            Value="28" />
        <Setter Property="VerticalAlignment"
            Value="Center" />
        <Setter Property="Template">
            <Setter.Value>

                <!-- this is the style that loads on default buttons -->
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                        BorderThickness="1"
                        CornerRadius="0,6,0,0"
                        Margin="0,0,0,0">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                EndPoint="0,1">
                                <!-- <GradientStop Color="#3AFFFFFF"
                                    Offset="1.0" />
                                <GradientStop Color="#00FFFFFF"
                                    Offset="0.65" />
                                <GradientStop Color="#00FFFFFF"
                                    Offset="0.0" />  -->
                                <GradientStop Color="#00FFFFFF"
                                    Offset="1.0" />
                                <GradientStop Color="#00FFFFFF"
                                    Offset="0.0" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                <GradientStop Color="#00FFFFFF"
                                    Offset="1" />
                                <GradientStop Color="#00FFFFFF"
                                    Offset="0" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <ContentPresenter Margin="5,0,5,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                            Value="false">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                EndPoint="0,1">
                                        <GradientStop Color="#00FFFFFF"
                                    Offset="1.0" />
                                        <GradientStop Color="#00FFFFFF"
                                    Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                EndPoint="0,1">
                                        <!-- <GradientStop Color="#EF005CE4"
                                    Offset="1.0" />
                                        <GradientStop Color="#7F0054C9"
                                    Offset="0.4" />
                                        <GradientStop Color="#3F1B4266"
                                    Offset="0.0" /> 
                                        <GradientStop Color="#DF005CE4" Offset="1.0" />
                                        <GradientStop Color="#6F0054C9" Offset="0.3" />
                                        <GradientStop Color="#4FFFFFFF" Offset="0.0" /> -->

                                        <GradientStop Color="#00FFFFFF"
                                    Offset="1.0" />
                                        <GradientStop Color="#1fFFFFFF"
                                    Offset="0.0" />

                                    </LinearGradientBrush>
                                    
                                    
                                </Setter.Value>
                                
                            </Setter>
                            <Setter TargetName="Border"
                                Property="BorderBrush">
                                <Setter.Value>

                                    <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                        <GradientStop Color="#4FFFFFFF"
                                    Offset="1" />
                                        <GradientStop Color="#0FFFFFFF"
                                    Offset="0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                        <GradientStop Color="#BA0054C9"
                                    Offset="1.0" />
                                        <GradientStop Color="#4F005CE4"
                                    Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border"
                                Property="BorderBrush">
                                <Setter.Value>

                                    <LinearGradientBrush StartPoint="0,1"
                                EndPoint="0,0">
                                        <GradientStop Color="#DF00aeff"
                                    Offset="1" />
                                        <GradientStop Color="#8F005A78"
                                    Offset="0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Button Style for Dialogs -->
    <Style x:Key="CairoButtonStyle"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="FontFamily"
            Value="Corbel" />
        <Setter Property="FontSize"
            Value="14" />
        <Setter Property="MinWidth"
            Value="100" />
        <Setter Property="MinHeight"
            Value="30" />
        <Setter Property="VerticalAlignment"
            Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                        BorderThickness="1"
                        CornerRadius="3"
                        BorderBrush="#FF999999">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                EndPoint="0,1">
                                <GradientStop Color="#FFFFFFFF"
                                    Offset="0" />
                                <GradientStop Color="#FFD9D9D9"
                                    Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter Margin="0,0,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                            Value="false">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                        EndPoint="0,1">
                                        <GradientStop Color="Gray"
                                            Offset="0" />
                                        <GradientStop Color="DarkGray"
                                            Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                        EndPoint="0,1">
                                        <GradientStop Color="#FFE9E9E9"
                                            Offset="0" />
                                        <GradientStop Color="#FFB1B1B1"
                                            Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                        EndPoint="0,1">
                                        <GradientStop Color="#FFD1D1D1"
                                            Offset="0" />
                                        <GradientStop Color="#FF999999"
                                            Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Stacks -->
    <Style x:Key="CairoStacksStyle"
        TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground"
            Value="#FFFFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                        Background="Transparent"
                        BorderBrush="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"
                                    SharedSizeGroup="MenuTextColumnGroup" />
                            </Grid.ColumnDefinitions>
                            <!-- Content for the menu text etc -->
                            <ContentPresenter Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                x:Name="HeaderHost"
                                RecognizesAccessKey="True"
                                ContentSource="Header" />
                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Right"
                                x:Name="SubMenuPopup"
                                Focusable="false"
                                PopupAnimation="Slide"
                                AllowsTransparency="True">
                                <StackPanel>
                                    <Border x:Name="SubMenuBorder">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="BorderBrush"
                                                Value="#6F707070" />
                                                <Setter Property="BorderThickness"
                                                Value="0,1,0,0" />
                                            </Style>
                                        </Border.Style>
                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <LinearGradientBrush StartPoint="0.5,0"
                                                            EndPoint="0.5,1">
                                                                <GradientStop Color="#bf1a1a1a"
                                                                Offset="0" />
                                                                <GradientStop Color="#cF000000"
                                                                Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="BorderBrush"
                                                    Value="#FF5b5b5b" />
                                                    <Setter Property="BorderThickness"
                                                    Value="0,0,0,1" />
                                                    <Setter Property="Padding"
                                                    Value="0,5,0,5" />
                                                </Style>
                                            </Border.Style>
                                            <Grid x:Name="SubMenu"
                                            Grid.IsSharedSizeScope="True">
                                                <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                                <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                                            </Grid>
                                        </Border>
                                    </Border>
                                    <Image Source="Resources\menubarShadow.png" Stretch="Fill" Width="{DynamicResource {x:Static SystemParameters.MaximizedPrimaryScreenWidthKey}}" Height="16"/>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </Border>
                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>
                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role"
                            Value="TopLevelHeader">
                            <Setter Property="Padding"
                                Value="13,1,13,0" />
                            <Setter Property="Margin"
                                Value="0,-2,0,0" />
                            <Setter Property="Placement"
                                Value="Bottom"
                                TargetName="SubMenuPopup" />
                            <Setter Property="Height"
                                Value="22" />
                            <Setter Property="FontFamily"
                                Value="Segoe UI" />
                            <Setter Property="FontSize"
                                Value="14" />
                            <Setter Property="BitmapEffect">
                                <Setter.Value>
                                    <OuterGlowBitmapEffect GlowColor="Black"
                                        GlowSize="2"
                                        Opacity="1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="TopLevelHeader" />
                                <Condition Property="IsMouseOver"
                                    Value="True" />
                                <Condition Property="IsPressed"
                                    Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BitmapEffect">
                                <Setter.Value>
                                    <OuterGlowBitmapEffect GlowColor="Black"
                                        GlowSize="7"
                                        Opacity=".5" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="TopLevelHeader" />
                                <Condition Property="IsSubmenuOpen"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                TargetName="Border">
                                <Setter.Value>
                                    <!-- Pressed Menubar State -->
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                        <GradientStop Color="#8F1A4DB5" Offset="1.0" />
                                        <GradientStop Color="#DF338FFF" Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground"
                                Value="#FFFFFFFF" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="TopLevelItem" />
                                <Condition Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                TargetName="Border" Value="{StaticResource CairoMenuItemHoverGradient}"/>
                        </MultiTrigger>
                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role"
                            Value="TopLevelItem">
                            <Setter Property="Padding"
                                Value="0,3,0,0" />
                            <Setter Property="MinHeight"
                                Value="24" />
                            <Setter Property="Foreground"
                                Value="#FFFFFFFF" />
                            <Setter Property="FontSize"
                                Value="12" />
                            <Setter Property="FontFamily"
                                Value="Segoe UI" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Button Style for Stacks -->
    <Style x:Key="CairoStackButtonStyle"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="FontFamily"
            Value="Segoe UI" />
        <Setter Property="FontSize"
            Value="12" />
        <Setter Property="Height"
            Value="85" />
        <Setter Property="MinWidth"
            Value="100" />
        <Setter Property="VerticalAlignment"
            Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter Margin="5,0,5,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                        <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                            Value="true">
                            <Setter Property="Button.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black"
                                                        ShadowDepth="0"
                                                        Direction="0"
                                                        Opacity="1" BlurRadius="6" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                            Value="true">
                            <Setter Property="Button.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black"
                                                        ShadowDepth="0"
                                                        Direction="0"
                                                        Opacity="1" BlurRadius="7" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Button Style for Desktop -->
    <Style x:Key="CairoDesktopButtonStyle"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="FontFamily"
            Value="Segoe UI" />
        <Setter Property="FontSize"
            Value="12" />
        <Setter Property="Height"
            Value="85" />
        <Setter Property="MinWidth"
            Value="100" />
        <Setter Property="VerticalAlignment"
            Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter Margin="5,8,5,5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                            Value="true">
                            <Setter Property="Button.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black"
                                                        ShadowDepth="0"
                                                        Direction="0"
                                                        Opacity="0.5" BlurRadius="6" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                            Value="true">
                            <Setter Property="Button.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black"
                                                        ShadowDepth="0"
                                                        Direction="0"
                                                        Opacity="1" BlurRadius="7" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Scrollbars -->
    <Style x:Key="ScrollBarLineButton"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
            Value="True" />
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="Focusable"
            Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border"
                        Margin="1"
                        CornerRadius="2"
                        Background="#22FFFFFF"
                        BorderBrush="#22000000"
                        BorderThickness="1">
                        <Path HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fill="#FF444444"
                            Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background"
                                Value="#33FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background"
                                Value="#44FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                            Value="false">
                            <Setter Property="Foreground"
                                Value="DarkGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
            Value="True" />
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="IsTabStop"
            Value="false" />
        <Setter Property="Focusable"
            Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb"
        TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
            Value="True" />
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="IsTabStop"
            Value="false" />
        <Setter Property="Focusable"
            Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2"
                        Background="#22FFFFFF"
                        BorderBrush="#22000000"
                        BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScrollBar"
        TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                CornerRadius="2,0,0,2"
                Background="#FFBFBFBF" />
            <RepeatButton Grid.Row="0"
                Style="{StaticResource ScrollBarLineButton}"
                Height="18"
                Command="ScrollBar.LineUpCommand"
                Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                        Margin="1,0,1,0"
                        Background="#22FFFFFF"
                        BorderBrush="#22000000" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3"
                Style="{StaticResource ScrollBarLineButton}"
                Height="18"
                Command="ScrollBar.LineDownCommand"
                Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar"
        TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                CornerRadius="2,2,0,0"
                Background="#FFBFBFBF" />
            <RepeatButton Grid.Column="0"
                Style="{StaticResource ScrollBarLineButton}"
                Width="18"
                Command="ScrollBar.LineLeftCommand"
                Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track"
                Grid.Column="1"
                IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                        Margin="0,1,0,1"
                        Background="#22FFFFFF"
                        BorderBrush="#22000000" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3"
                Style="{StaticResource ScrollBarLineButton}"
                Width="18"
                Command="ScrollBar.LineRightCommand"
                Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="{x:Type ScrollBar}"
        TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
            Value="True" />
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                Value="Horizontal">
                <Setter Property="Width"
                    Value="Auto" />
                <Setter Property="Height"
                    Value="18" />
                <Setter Property="Template"
                    Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
                Value="Vertical">
                <Setter Property="Width"
                    Value="18" />
                <Setter Property="Height"
                    Value="Auto" />
                <Setter Property="Template"
                    Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Button Style for Stack Scrollers -->
    <Style x:Key="StackScrollButton"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="FontFamily"
            Value="Webdings" />
        <Setter Property="Foreground"
            Value="#5fFFFFFF" />
        <Setter Property="FontSize"
            Value="11.5" />
        <Setter Property="Width"
            Value="20" />
        <Setter Property="Height"
            Value="20" />
        <Setter Property="VerticalAlignment"
            Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                        BorderThickness="1"
                        CornerRadius="10"
                        BorderBrush="#5fFFFFFF"
                        Background="#2fFFFFFF">
                        <ContentPresenter Margin="0,2,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                        
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                            Value="false">
                            <Setter TargetName="Border"
                                Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                        EndPoint="0,1">
                                        <GradientStop Color="#3FFFFFFF"
                                    Offset="0" />
                                        <GradientStop Color="#3FFFFFFF"
                                    Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background"
                                Value="#2f555555" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                            Value="true">
                            <Setter TargetName="Border"
                                Property="Background"
                                Value="#2f000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
