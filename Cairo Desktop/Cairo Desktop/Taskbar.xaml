<?xml version="1.0" encoding="utf-8"?>
<supportingclasses:AppBarWindow
    xmlns:supportingclasses="clr-namespace:CairoDesktop.SupportingClasses"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="CairoDesktop.Taskbar"
    xmlns:self="clr-namespace:CairoDesktop"
    xmlns:l10n="clr-namespace:CairoDesktop.Localization;assembly=CairoDesktop.Localization"
    x:Name="TaskbarWindow"
    Left="0"
    Margin="0,0,0,0"
    ShowActivated="False"
    AllowDrop="True"
    Visibility="Visible"
    Loaded="TaskbarWindow_Loaded"
    LocationChanged="TaskbarWindow_LocationChanged"
    Background="Transparent"
    HorizontalAlignment="Center">
    <Border Name="bdrBackground">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Setter Property="Background" Value="Transparent"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsOverlayOpen}" Value="True">
                        <Setter Property="Background" Value="#88000000"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Border HorizontalAlignment="Center" Name="bdrMain">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TranslateTransform X="0"
                                                Y="0" />
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=TaskbarWindow}" Value="False" />
                                <Condition Binding="{Binding TaskbarMode}" Value="2" />
                                <Condition Binding="{Binding TaskbarPosition}" Value="0" />
                                <Condition Binding="{Binding TaskbarIconSize}" Value="1" />
                                <Condition Binding="{Binding Path=CanAutoHide, ElementName=TaskbarWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         To="27"
                                                         BeginTime="0:0:0.5"
                                                         Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         To="0"
                                                         Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=TaskbarWindow}" Value="False" />
                                <Condition Binding="{Binding TaskbarMode}" Value="2" />
                                <Condition Binding="{Binding TaskbarPosition}" Value="0" />
                                <Condition Binding="{Binding TaskbarIconSize}" Value="10" />
                                <Condition Binding="{Binding Path=CanAutoHide, ElementName=TaskbarWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         To="35"
                                                         BeginTime="0:0:0.5"
                                                         Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         To="0"
                                                         Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=TaskbarWindow}" Value="False" />
                                <Condition Binding="{Binding TaskbarMode}" Value="2" />
                                <Condition Binding="{Binding TaskbarPosition}" Value="0" />
                                <Condition Binding="{Binding TaskbarIconSize}" Value="0" />
                                <Condition Binding="{Binding Path=CanAutoHide, ElementName=TaskbarWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         To="43"
                                                         BeginTime="0:0:0.5"
                                                         Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         To="0"
                                                         Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=TaskbarWindow}" Value="False" />
                                <Condition Binding="{Binding TaskbarMode}" Value="2" />
                                <Condition Binding="{Binding TaskbarPosition}" Value="1" />
                                <Condition Binding="{Binding TaskbarIconSize}" Value="1" />
                                <Condition Binding="{Binding Path=CanAutoHide, ElementName=TaskbarWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         To="-27"
                                                         BeginTime="0:0:0.5"
                                                         Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         To="0"
                                                         Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=TaskbarWindow}" Value="False" />
                                <Condition Binding="{Binding TaskbarMode}" Value="2" />
                                <Condition Binding="{Binding TaskbarPosition}" Value="1" />
                                <Condition Binding="{Binding TaskbarIconSize}" Value="10" />
                                <Condition Binding="{Binding Path=CanAutoHide, ElementName=TaskbarWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         To="-35"
                                                         BeginTime="0:0:0.5"
                                                         Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         To="0"
                                                         Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=TaskbarWindow}" Value="False" />
                                <Condition Binding="{Binding TaskbarMode}" Value="2" />
                                <Condition Binding="{Binding TaskbarPosition}" Value="1" />
                                <Condition Binding="{Binding TaskbarIconSize}" Value="0" />
                                <Condition Binding="{Binding Path=CanAutoHide, ElementName=TaskbarWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         To="-43"
                                                         BeginTime="0:0:0.5"
                                                         Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         To="0"
                                                         Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <StackPanel Orientation="Horizontal" x:Name="grdTaskbar" HorizontalAlignment="Center" VerticalAlignment="Stretch" ContextMenuOpening="grdTaskbar_ContextMenuOpening">
                <StackPanel.ContextMenu>
                    <ContextMenu Closed="ContextMenu_Closed">
                        <MenuItem Header="{Binding Path=(l10n:DisplayString.sCairoMenu_Run)}"
                              Click="OpenRunWindow" />
                        <MenuItem Header="{Binding Path=(l10n:DisplayString.sCairoMenu_TaskManager)}"
                              Click="OpenTaskManager" />
                    </ContextMenu>
                </StackPanel.ContextMenu>
                <Border HorizontalAlignment="Center" Name="bdrTaskbar">
                    <DockPanel>
                        <ToggleButton x:Name="btnDesktopOverlay" Click="btnDesktopOverlay_Click" DockPanel.Dock="Left" IsChecked="{Binding Path=IsOverlayOpen, Mode=OneWay}" ToolTip="{Binding Path=(l10n:DisplayString.sTaskbar_DesktopOverlayToolTip)}" ToolTipService.Placement="Top">
                            <Image Source="Resources\desktopOverlayIcon.png"
                                   Width="15"
                                   Height="14"
                                   Margin="0"></Image>
                        </ToggleButton>
                        <ListView HorizontalAlignment="Stretch"
                                  Name="quickLaunchList"
                                  Style="{StaticResource QuickLaunchListStyle}"
                                  Margin="0,0,5,0"
                                  Drop="quickLaunchList_Drop"
                                  DragEnter="quickLaunchList_DragEnter">
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"
                            Margin="0"></StackPanel>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <self:QuickLaunchButton MouseRightButtonUp="TaskButton_MouseRightButtonUp" ParentTaskbar="{Binding ElementName=TaskbarWindow}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                        <ToggleButton x:Name="btnTaskList" Click="btnTaskList_Click" DockPanel.Dock="Right" ToolTip="{Binding Path=(l10n:DisplayString.sTaskbar_TaskListToolTip)}" ToolTipService.Placement="Top">
                            <Image Source="Resources\taskListIcon.png"
                           Width="14"
                           Height="12"
                           Margin="0"></Image>
                        </ToggleButton>
                        <Popup Placement="Relative" PlacementTarget="{Binding ElementName=btnTaskList}" HorizontalOffset="-426" Name="CairoTaskbarTaskList" AllowsTransparency="True" PopupAnimation="Fade" IsOpen="{Binding ElementName=btnTaskList, Path=IsChecked}" StaysOpen="False" Closed="CairoTaskbarTaskList_Closed">
                            <Border Name="bdrTaskListPopup" Style="{StaticResource CairoTaskListPopupStyle}">
                                <StackPanel Orientation="Vertical">
                                    <ListView HorizontalAlignment="Stretch"
                            Style="{StaticResource TaskListStyle}"
                            Margin="0,-3,0,3"
                            x:Name="TasksList2">
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Vertical"
                                Margin="0"></StackPanel>
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.ContainerStyle>
                                                    <Style TargetType="{x:Type GroupItem}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate>
                                                                    <StackPanel Orientation="Horizontal" Margin="0,3">
                                                                        <Border BorderThickness="0,0,1,0" BorderBrush="{DynamicResource ResourceKey=MenuBorderBrush}" Width="100" Margin="0,-3">
                                                                            <TextBlock Text="{Binding Path=Name}" HorizontalAlignment="Right" VerticalAlignment="Top" Padding="6,7,6,0" TextTrimming="CharacterEllipsis" />
                                                                        </Border>
                                                                        <ItemsPresenter />
                                                                    </StackPanel>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </GroupStyle.ContainerStyle>
                                            </GroupStyle>
                                        </ListView.GroupStyle>
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListViewItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                            <Border BorderThickness="0" BorderBrush="Transparent">
                                                                <self:TaskButton ListMode="True">
                                                                    <self:TaskButton.Style>
                                                                        <Style TargetType="self:TaskButton">
                                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Path=ShowInTaskbar}" Value="True">
                                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </self:TaskButton.Style>
                                                                </self:TaskButton>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                    </ListView>
                                    <Border Margin="99,-3,0,-3" Padding="0,3" Width="351" BorderThickness="1,0,0,0" BorderBrush="{DynamicResource ResourceKey=MenuBorderBrush}" Visibility="Collapsed" Name="bdrTaskView">
                                        <MenuItem Header="{Binding Path=(l10n:DisplayString.sTaskbar_TaskView)}" Click="TaskView_Click">
                                            <MenuItem.Icon>
                                                <Image Source="Resources\taskViewIcon.png"
                                        Width="16"
                                        Height="16"
                                        Margin="0,-1,0,0" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </Border>
                                </StackPanel>
                            </Border>
                        </Popup>
                        <ListView HorizontalAlignment="Stretch"
                                  Style="{StaticResource TaskbarListView}"
                                  x:Name="TasksList">
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="0"></StackPanel>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.GroupStyle>
                                <GroupStyle x:Name="TaskbarGroupStyle">
                                    <GroupStyle.Panel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"></StackPanel>
                                        </ItemsPanelTemplate>
                                    </GroupStyle.Panel>
                                </GroupStyle>
                            </ListView.GroupStyle>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border BorderThickness="0" Margin="0,0,-1,0" BorderBrush="Transparent" Width="{Binding Path=ButtonWidth, ElementName=TaskbarWindow}">
                                                    <self:TaskButton ListMode="False" MouseRightButtonUp="TaskButton_MouseRightButtonUp" ParentTaskbar="{Binding ElementName=TaskbarWindow}" />
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=ShowInTaskbar}" Value="True">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Border.Triggers>
                                                        <EventTrigger RoutedEvent="Loaded">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="Width" From="0" To="{Binding Path=ButtonWidth, ElementName=TaskbarWindow}" Duration="0:0:0.2" FillBehavior="Stop" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </Border.Triggers>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </DockPanel>
                </Border>
            </StackPanel>
        </Border>
    </Border>
</supportingclasses:AppBarWindow>